<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>

	<!-- repository key for AT&T maven central -->
	<groupId>org.openecomp.ui.dmaapbc</groupId>
	<artifactId>dmaap-bc-app</artifactId>
	<version>1.0.0</version>
	<packaging>war</packaging>
	<name>DMaaP Bus Controller Webapp</name>
	<description>DCAE DMaaP Bus Controller GUI based on the ECOMP Portal Open-Source SDK</description>
	<scm>
		<url>https://gitlab/projects/ST_DBPA/repos/dcae_dmaapbc_webapp/browse</url>
		<developerConnection>scm:git:ssh://git@gitlab/st_dbpa/dcae_dmaapbc_webapp.git</developerConnection>
	</scm>

	<properties>
		<encoding>UTF-8</encoding>
		<epsdk.version>1.0.0</epsdk.version>
		<springframework.version>4.2.0.RELEASE</springframework.version>
		<hibernate.version>4.3.11.Final</hibernate.version>
		<!-- Tests usually require some setup that maven cannot do, so skip. -->
		<skiptests>true</skiptests>
		<!-- Jenkins invokes mvn with argument -Dbuild.number=${BUILD_NUMBER} -->
		<build.number>0</build.number>
		<sonar.exclusions>**.js</sonar.exclusions>
		<nexusproxy>https://nexus.onap.org</nexusproxy>
		<sitePath>/content/sites/site/org/openecomp/ui/dmaapbc/${project.version}</sitePath>
	</properties>

	<repositories>
		<repository>
			<!-- Releases repository has ECOMP release artifacts -->
			<id>ecomp-releases</id>
			<name>OpenECOMP - Release Repository</name>
			<url>https://nexus.openecomp.org/content/repositories/releases/</url>
		</repository>
		<repository>
			<!-- Snapshots repository has ECOMP snapshot artifacts -->
			<id>ecomp-snapshots</id>
			<name>OpenECOMP - Snapshot Repository</name>
			<url>https://nexus.openecomp.org/content/repositories/snapshots/</url>
		</repository>
		<repository>
			<!-- Staging repository has ECOMP staging artifacts -->
			<id>ecomp-staging</id>
			<name>OpenECOMP - Staging Repository</name>
			<url>https://nexus.openecomp.org/content/repositories/staging/</url>
		</repository>
	</repositories>

	<profiles>
		<!-- disable doclint, a new feature in Java 8, when generating javadoc -->
		<profile>
			<id>doclint-java8-disable</id>
			<activation>
				<jdk>[1.8,)</jdk>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>2.10.4</version>
						<configuration>
							<additionalparam>-Xdoclint:none</additionalparam>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>

		<!-- The final artifact has the build number -->
		<finalName>${project.artifactId}.${project.version}.${build.number}</finalName>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
			 <groupId>com.blackducksoftware.integration</groupId>
			 <artifactId>hub-maven-plugin</artifactId>
			 <version>1.4.0</version>
			 <inherited>false</inherited>
			 <configuration>
			  <hubProjectName>${project.name}</hubProjectName>
			  <outputDirectory>${project.basedir}</outputDirectory>
			 </configuration>
			 <executions>
			  <execution>
			   <id>create-bdio-file</id>
			   <phase>package</phase>
			   <goals>
			    <goal>createHubOutput</goal>
			   </goals>
			  </execution>
			 </executions>
			</plugin>
			 <plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.2</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-scm-plugin</artifactId>
				<version>1.8.1</version>
				<configuration>
					<connectionType>developerConnection</connectionType>
					<scmVersionType>branch</scmVersionType>
					<scmVersion>master</scmVersion>
				</configuration>
			</plugin>

			<!-- Require Java 1.8 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<!-- 
			Generate javadoc jar; see profile for Java 8.
			This attempts to run dot (of graphviz), but failure 
			(missing program) does not stop the build. 
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.4</version>
				<configuration>
					<failOnError>false</failOnError>
					<doclet>org.umlgraph.doclet.UmlGraphDoc</doclet>
					<docletArtifact>
						<groupId>org.umlgraph</groupId>
						<artifactId>umlgraph</artifactId>
						<version>5.6</version>
					</docletArtifact>
					<additionalparam>-views</additionalparam>
					<useStandardDocletOptions>true</useStandardDocletOptions>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<skipTests>${skiptests}</skipTests>
					<includes>
						<include>**/Test*.java</include>
						<include>**/*Test.java</include>
						<include>**/*TestCase.java</include>
					</includes>
					<additionalClasspathElements>
						<additionalClasspathElement>${basedir}/war</additionalClasspathElement>
					</additionalClasspathElements>
					<systemPropertyVariables>
						<container.classpath>classpath:</container.classpath>
					</systemPropertyVariables>
				</configuration>
			</plugin>

			<!-- add build information to manifest -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Build-Number>${build.number}</Build-Number>
							<Build-Time>${maven.build.timestamp}</Build-Time>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<!-- For uploading javadoc to open source repo -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.6</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.wagon</groupId>
						<artifactId>wagon-webdav-jackrabbit</artifactId>
						<version>2.10</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- older versions are very buggy -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<!-- REST client -->
		<dependency>
			<groupId>org.openecomp.ui.dmaapbc</groupId>
			<artifactId>dmaap-bc-client</artifactId>
			<version>1.0.0</version>
		</dependency>
		<!-- For using HTTP Basic Auth in uService REST client -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.3.5</version>
		</dependency>
		<!-- SDK components -->
		<dependency>
			<groupId>org.openecomp.ecompsdkos</groupId>
			<artifactId>ecompSDK-core</artifactId>
			<version>${epsdk.version}</version>
		</dependency>
		<dependency>
			<groupId>com.att.eelf</groupId>
			<artifactId>eelf-core</artifactId>
			<version>0.0.1</version>
		</dependency>
		<!-- Mapper -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.6.3</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.6.3</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.6.3</version>
		</dependency>
		<dependency>
			<groupId>com.mchange</groupId>
			<artifactId>c3p0</artifactId>
			<version>0.9.5.2</version>
		</dependency>
		<dependency>
			<groupId>io.searchbox</groupId>
			<artifactId>jest</artifactId>
			<version>2.0.0</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
		</dependency>
		<!-- Elastic Search -->
		<dependency>
			<groupId>org.elasticsearch</groupId>
			<artifactId>elasticsearch</artifactId>
			<version>2.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20160212</version>
		</dependency>
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>2.2.1</version>
			<exclusions>
				<!-- exclude 0.9.1.1 to avoid dupe of com.mchange:c3p0:0.9.2.1 -->
				<exclusion>
					<groupId>c3p0</groupId>
					<artifactId>c3p0</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- bridge to implement commons-logging using slf4j -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.7.12</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${springframework.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${springframework.version}</version>
		</dependency>
	</dependencies>

	<distributionManagement>
		<!-- 
		This requires a corresponding entry in ~/.m2/settings.xml with username/password.
		It also uses a self-signed certificate; import to Java default keystore to make it work. 
		/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/jre/lib/security/cacerts
		with password "changeit"
		-->
		<site>
			<id>ecomp-site</id>
			<url>dav:${nexusproxy}${sitePath}</url>
		</site>
	</distributionManagement>
	<pluginRepositories>
		<!-- Black Duck plugin dependencies -->
		<pluginRepository>
		 <id>JCenter</id>
		 <name>JCenter Repository</name>
		 <url>http://jcenter.bintray.com</url>
		</pluginRepository>
		 
		<pluginRepository>
		 <id>Restlet</id>
		 <name>Restlet Repository</name>
		 <url>http://maven.restlet.com</url>
		</pluginRepository>
	</pluginRepositories>

</project>
